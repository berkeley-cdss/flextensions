name: RSpec Tests

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  rspec:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      # Do not install production/staging-only gems in test environment
      BUNDLE_WITHOUT: "production staging"
      DB_HOST: localhost
      DB_USER: postgres
      DB_PASSWORD: password
      # TODO: This should not be required, but a few specs rely on it by using ENV.fetch.
      CANVAS_URL: https://ucberkeleysandbox.instructure.com
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      QLTY_COVERAGE_TOKEN: ${{ secrets.QLTY_COVERAGE_TOKEN }}
    steps:
    # - name: Install packages
    #   run: sudo apt-get update
    - uses: actions/checkout@v3
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: .tool-versions
        bundler-cache: true
    - name: Setup Database
      run: |
        bundle exec rails db:test:prepare
    - name: Create Chrome data directory
      run: mkdir -p /tmp/chrome-data-rspec
    - name: Run RSpec Tests
      run: |
        COVERAGE=true bundle exec rspec spec/ --tag "~skip" --tag "~wip"
        ls -la coverage/
      env:
        CHROME_DATA_DIR: /tmp/chrome-data-rspec
        COVERAGE: "true"
    - name: Submit QLTY Coverage Report
      uses: qltysh/qlty-action/coverage@v1
      if: env.QLTY_COVERAGE_TOKEN != ''
      with:
        token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
        files: coverage/.resultset.json
